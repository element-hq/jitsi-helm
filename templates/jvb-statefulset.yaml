
{{- range $shard, $e := until (int $.Values.shardCount) }}
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  labels:
    k8s-app: {{ $.Values.jvb.name }}
    scope: jitsi
    shard: {{ $shard | quote }}
  {{- with $.Values.jvb.extraLabels }}
    {{- toYaml . | nindent 4 }}
  {{- end }}
  annotations:
    configmap-hash: {{ include "jitsi.sharedconfigmap.hash" $ }}
  {{- with $.Values.jvb.extraAnnotations }}
    {{- toYaml . | nindent 4 }}
  {{- end }}
  name: shard-{{ $shard }}-{{ $.Values.jvb.name }}
  namespace: {{ $.Release.Namespace }}
spec:
  podManagementPolicy: Parallel
  replicas: {{ $.Values.jvb.replicas }}
  selector:
    matchLabels:
      k8s-app: {{ $.Values.jvb.name }}
      scope: jitsi
      shard: {{ $shard | quote }}
  serviceName: jvb
  template:
    metadata:
      labels:
        k8s-app: {{ $.Values.jvb.name }}
        scope: jitsi
        shard: {{ $shard | quote }}
      {{- with $.Values.jvb.extraLabels }}
        {{- toYaml . | nindent 8 }}
      {{- end }}
      annotations:
        configmap-hash: {{ include "jitsi.sharedconfigmap.hash" $ }}
        kubectl.kubernetes.io/default-container: jvb
      {{ if $.Values.jvb.monitoringEnable }}
        prometheus.io/scrape: "true"
        prometheus.io/port: "9888"
      {{ end }}
      {{- with $.Values.jvb.extraAnnotations }}
        {{- toYaml . | nindent 8 }}
      {{- end }}
    spec:
      automountServiceAccountToken: false
    {{- with $.Values.jvb.extraPodSpec }}
      {{- toYaml . | nindent 6 }}
    {{- end }}
      containers:
      {{ if $.Values.jvb.monitoringEnable -}}
      - args:
        - -videobridge-url
        - http://localhost:8080/colibri/stats
        image: {{ $.Values.jvb.monitoring.image }}
        imagePullPolicy: {{ $.Values.jvb.monitoring.imagePullPolicy }}
        livenessProbe:
          httpGet:
            port: metrics
            path: "/health"
        readinessProbe:
          httpGet:
            port: metrics
            path: "/health"
        startupProbe:
          httpGet:
            port: metrics
            path: "/health"
        name: prometheus-exporter
        ports:
        - containerPort: 9888
          name: metrics
      {{- with $.Values.jvb.monitoring.resources }}
        resources:
          {{- toYaml . | nindent 10 }}
      {{- end }}
      {{- with $.Values.jvb.monitoring.extraContainerSpec }}
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{ end -}}
      - args:
      {{- if empty $.Values.jvb.hostPort }}
        - "{{ $.Values.jvb.nodeportPrefix }}{{ add $shard 3 }}00"
      {{- end }}
        - {{ $.Values.jvb.entryPointWorkDir }}
        command:
        - {{ $.Values.jvb.entryPointMountPath }}/entrypoint.sh
        env:
        - name: NODE_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: XMPP_SERVER
          value: shard-{{ $shard }}-{{ $.Values.prosody.name }}.{{ $.Release.Namespace }}.svc.cluster.local
      {{- if $.Values.jvb.provideNodeAddressAsPublicIP }}
        - name: DOCKER_HOST_ADDRESS
          valueFrom:
            fieldRef:
              fieldPath: status.hostIP
        - name: JVB_ADVERTISE_IPS
          valueFrom:
            fieldRef:
              fieldPath: status.hostIP
      {{- else if $.Values.jvb.advertiseIP }}
        - name: JVB_ADVERTISE_IPS
          value: {{ $.Values.jvb.advertiseIP }}
      {{- end }}
        - name: XMPP_DOMAIN
          value: meet.jitsi
        - name: XMPP_AUTH_DOMAIN
          value: auth.meet.jitsi
        - name: XMPP_INTERNAL_MUC_DOMAIN
          value: internal-muc.meet.jitsi
        - name: JVB_STUN_SERVERS
          valueFrom:
            configMapKeyRef:
              key: JVB_STUN_SERVERS
              name: {{ $.Values.sharedConfigMapName }}
        - name: COLIBRI_REST_ENABLED
          value: "true"
        - name: SHUTDOWN_REST_ENABLED
          value: "true"
        - name: JVB_AUTH_USER
          value: jvb
        - name: JVB_AUTH_PASSWORD
          valueFrom:
            secretKeyRef:
              key: JVB_AUTH_PASSWORD
              name: {{ $.Values.secretName }}
        - name: JVB_BREWERY_MUC
          value: jvbbrewery
        - name: TZ
          valueFrom:
            configMapKeyRef:
              key: TZ
              name: {{ $.Values.sharedConfigMapName }}
        - name: PUBLIC_URL
          valueFrom:
            configMapKeyRef:
              name: {{ $.Values.sharedConfigMapName }}
              key: PUBLIC_URL
        - name: JVB_WS_SERVER_ID
          valueFrom:
            fieldRef:
              fieldPath: status.podIP
        - name: JVB_ADVERTISE_PRIVATE_CANDIDATES
          value: "{{ $.Values.jvb.advertisePrivateCandidates }}"
      {{- if ne (merge $.Values dict | dig "jvb" "resources" "limits" "memory" "") "" }}
        {{- $memoryLimit := $.Values.jvb.resources.limits.memory }}
        {{- $value := regexFind "\\d+" $memoryLimit }}
        {{- $heapSize := "" }}
        {{- if hasSuffix "Mi" $memoryLimit }}
          {{- $heapSize = mulf 0.95 (int $value) | int }}
        {{- else if hasSuffix "Gi" $memoryLimit }}
          {{- $heapSize = mulf 0.95 (mul 1024 (int $value)) | int }}
        {{- end }}
        - name: VIDEOBRIDGE_MAX_MEMORY
          value: {{ $heapSize }}M
      {{- end }}
      {{- if $.Values.jvb.extraEnvs }}
        {{- toYaml $.Values.jvb.extraEnvs | nindent 8 }}
      {{- end }}
      {{- if $.Values.jvb.image }}
        image: {{ $.Values.jvb.image }}
      {{- else }}
        image: jitsi/jvb:{{ $.Chart.AppVersion }}
      {{- end }}
        imagePullPolicy: {{ $.Values.jvb.imagePullPolicy }}
        lifecycle:
          preStop:
            exec:
              command:
              - bash
              - {{ $.Values.jvb.shutdownScriptPath }}
              - -t 3
        name: jvb
        ports:
        - containerPort: 9090
          name: public-http
        - containerPort: 8080
          name: private-http
          protocol: TCP
      {{- if not (empty $.Values.jvb.hostPort) }}
        - containerPort: {{ $.Values.jvb.hostPort }}
          name: ice
          hostPort: {{ $.Values.jvb.hostPort }}
          protocol: UDP
      {{- end }}
        readinessProbe:
          httpGet:
            path: /about/health
            port: private-http
        startupProbe:
          httpGet:
            path: /about/health
            port: private-http
        livenessProbe:
          httpGet:
            path: /about/health
            port: private-http
      {{- with $.Values.jvb.resources }}
        resources:
          {{- toYaml . | nindent 10 }}
      {{- end }}
        volumeMounts:
      {{- if $.Values.jvb.entryPointConfigMap.enable }}
        - mountPath: {{ $.Values.jvb.entryPointMountPath }}
          name: jvb-entrypoint
      {{- end }}
      {{- if $.Values.jvb.gracefulShutdownConfigMap.enable }}
        - mountPath: {{ $.Values.jvb.shutdownScriptPath }}
          name: jvb-shutdown
          subPath: graceful_shutdown.sh
      {{- end }}
      {{- with $.Values.jvb.extraVolumeMounts }}
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with $.Values.jvb.extraContainerSpec }}
        {{- toYaml . | nindent 8 }}
      {{- end }}
      terminationGracePeriodSeconds: 2147483647
    {{- if $.Values.jvb.entryPointConfigMap.enable }}
      volumes:
      - configMap:
          defaultMode: 508
          name: {{ $.Values.jvb.entryPointConfigMap.name }}
        name: jvb-entrypoint
    {{- end }}
    {{- if $.Values.jvb.gracefulShutdownConfigMap.enable }}
      - configMap:
          defaultMode: 508
          name: {{ $.Values.jvb.gracefulShutdownConfigMap.name }}
        name: jvb-shutdown
    {{- end }}
    {{- with $.Values.jvb.extraVolumes }}
      {{- toYaml . | nindent 6 }}
    {{- end }}
  updateStrategy:
    type: RollingUpdate
{{ end }}
