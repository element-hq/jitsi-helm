{{- range $shard, $e := until (int $.Values.shardCount) }}
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  labels:
    k8s-app: {{ $.Values.jvb.name }}
    scope: jitsi
    shard: {{ $shard | quote }}
  name: shard-{{ $shard }}-{{ $.Values.jvb.name }}
  namespace: {{ $.Release.Namespace }}
spec:
  podManagementPolicy: Parallel
  replicas: {{ $.Values.jvb.replicas }}
  selector:
    matchLabels:
      k8s-app: {{ $.Values.jvb.name }}
      scope: jitsi
      shard: {{ $shard | quote }}
  serviceName: jvb
  template:
    metadata:
      labels:
        k8s-app: {{ $.Values.jvb.name }}
        scope: jitsi
        shard: {{ $shard | quote }}
      annotations:
        kubectl.kubernetes.io/default-container: jvb
      {{ if $.Values.jvb.monitoringEnable }}
        prometheus.io/scrape: "true"
        prometheus.io/port: "9888"
      {{ end }}
    spec:
    {{- with $.Values.jvb.extraPodSpec }}
      {{- toYaml . | nindent 6 }}
    {{- end }}
      containers:
      {{ if $.Values.jvb.monitoringEnable -}}
      - args:
        - -videobridge-url
        - http://localhost:8080/colibri/stats
        image: {{ $.Values.jvb.monitoring.image }}
        imagePullPolicy: {{ $.Values.jvb.monitoring.imagePullPolicy }}
        livenessProbe:
          httpGet:
            port: metrics
            path: "/health"
        name: prometheus-exporter
        ports:
        - containerPort: 9888
          name: metrics
        readinessProbe:
          httpGet:
            port: metrics
            path: "/health"
        resources:
          limits:
            cpu: 100m
            memory: 100Mi
          requests:
            cpu: 100m
            memory: 100Mi
      {{ end -}}
      - args:
      {{- if empty $.Values.jvb.hostPort }}
        - "{{ $.Values.jvb.nodeportPrefix }}{{ add $shard 3 }}00"
      {{- end }}
        - /init
        command:
        - /entrypoint/entrypoint.sh
        env:
        - name: NODE_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: XMPP_SERVER
          value: shard-{{ $shard }}-{{ $.Values.prosody.name }}.{{ $.Release.Namespace }}.svc.cluster.local
      {{- if $.Values.jvb.provideNodeAddressAsPublicIP }}
        - name: DOCKER_HOST_ADDRESS
          valueFrom:
            fieldRef:
              fieldPath: status.hostIP
      {{- end }}
        - name: XMPP_DOMAIN
          value: meet.jitsi
        - name: XMPP_AUTH_DOMAIN
          value: auth.meet.jitsi
        - name: XMPP_INTERNAL_MUC_DOMAIN
          value: internal-muc.meet.jitsi
        - name: JVB_STUN_SERVERS
          valueFrom:
            configMapKeyRef:
              key: JVB_STUN_SERVERS
              name: jitsi-config
        - name: COLIBRI_REST_ENABLED
          value: "true"
        - name: SHUTDOWN_REST_ENABLED
          value: "true"
        - name: JVB_AUTH_USER
          value: jvb
        - name: JVB_AUTH_PASSWORD
          valueFrom:
            secretKeyRef:
              key: JVB_AUTH_PASSWORD
              name: jitsi-secrets
        - name: JVB_BREWERY_MUC
          value: jvbbrewery
        - name: TZ
          valueFrom:
            configMapKeyRef:
              key: TZ
              name: jitsi-config
        - name: PUBLIC_URL
          valueFrom:
            configMapKeyRef:
              name: jitsi-config
              key: PUBLIC_URL
        - name: JVB_WS_SERVER_ID
          valueFrom:
            fieldRef:
              fieldPath: status.podIP
        - name: JVB_ADVERTISE_PRIVATE_CANDIDATES
          value: "false"
      {{- if $.Values.jvb.extraEnvs }}
        {{- toYaml $.Values.jvb.extraEnvs | nindent 8 }}
      {{- end }}
        image: {{ $.Values.jvb.image }}
        imagePullPolicy: {{ $.Values.jvb.imagePullPolicy }}
        lifecycle:
          preStop:
            exec:
              command:
              - bash
              - /shutdown/graceful_shutdown.sh
              - -t 3
        name: jvb
        ports:
        - containerPort: 9090
          name: public-http
        - containerPort: 8080
          name: private-http
          protocol: TCP
      {{- if not (empty $.Values.jvb.hostPort) }}
        - containerPort: {{ $.Values.jvb.hostPort }}
          name: ice
          hostPort: {{ $.Values.jvb.hostPort }}
          protocol: UDP
      {{- end }}
        readinessProbe:
          httpGet:
            path: /about/health
            port: private-http
        startupProbe:
          httpGet:
            path: /about/health
            port: private-http
      {{- with $.Values.jvb.resources }}
        resources:
          {{- toYaml . | nindent 10 }}
      {{- end }}
        volumeMounts:
        - mountPath: /entrypoint
          name: jvb-entrypoint
        - mountPath: /shutdown
          name: jvb-shutdown
      terminationGracePeriodSeconds: 2147483647
      volumes:
      - configMap:
          defaultMode: 484
          name: jvb-entrypoint
        name: jvb-entrypoint
      - configMap:
          defaultMode: 484
          name: jvb-shutdown
        name: jvb-shutdown
  updateStrategy:
    type: RollingUpdate
{{ end }}
