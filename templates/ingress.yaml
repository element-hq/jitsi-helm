{{ if .Values.ingress.enabled -}}
{{ $hosts := (gt (len $.Values.ingress.hosts) 0) | ternary ($.Values.ingress.hosts) (list ($.Values.PUBLIC_URL | default "" | replace "https://" "")) -}}
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  annotations:
    {{- if $.Values.ingress.tls.certManagerClusterIssuer }}
    cert-manager.io/cluster-issuer: {{ $.Values.ingress.tls.certManagerClusterIssuer }}
    {{- end }}
    {{- if $.Values.ingress.annotations }}
    {{- $.Values.ingress.annotations | toYaml | nindent 4 }}
    {{- end }}
  name: ingress
  namespace: {{ $.Values.namespace }}
  labels:
    scope: jitsi
spec:
  {{ if $.Values.ingress.class -}}
  ingressClassName: {{ $.Values.ingress.class }}
  {{ end -}}
  rules:
  {{ range $hosts -}}
  - host: {{ . | quote }}
    http:
      paths:
      - backend:
          service:
            name: haproxy
            port:
              name: http
        path: /
        pathType: Prefix
  {{ end -}}
  {{ if $.Values.ingress.tls.enabled -}}
  tls:
  - hosts:
    {{ range $hosts -}}
    - {{ . | quote }}
    {{ end -}}
    secretName: {{ $.Values.ingress.tls.secretName | quote }}
  {{ end -}}
{{ end -}}
