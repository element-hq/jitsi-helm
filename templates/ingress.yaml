{{ if .Values.ingress.enabled -}}
{{ $hosts := (gt (len $.Values.ingress.hosts) 0) | ternary ($.Values.ingress.hosts) (list ($.Values.PUBLIC_URL | default "" | replace "https://" "")) -}}
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  annotations:
    {{- if $.Values.ingress.tls.certManagerClusterIssuer }}
    cert-manager.io/cluster-issuer: {{ $.Values.ingress.tls.certManagerClusterIssuer }}
    {{- end }}
    {{- if $.Values.ingress.annotations }}
    {{- $.Values.ingress.annotations | toYaml | nindent 4 }}
    {{- end }}
  name:  {{ $.Values.ingress.name }}
  namespace: {{ $.Release.Namespace }}
  labels:
    scope: jitsi
  {{- with $.Values.ingress.extraLabels }}
    {{- toYaml . | nindent 4 }}
  {{- end }}
spec:
  {{ if $.Values.ingress.class -}}
  ingressClassName: {{ $.Values.ingress.class }}
  {{ end -}}
  rules:
  {{ range $hosts -}}
  - host: {{ . | quote }}
    http:
      paths:
      {{ range $.Values.ingress.extraPaths -}}
      - backend:
          service:
            name: {{ .serviceName | required "serviceName is required for every ingress.extraPaths" | quote }}
            port:
            {{- if .portName }}
              name: {{ .portName | quote -}}
            {{- else }}
              number: {{ .portNumber | required "Either portName or portNumber is required for every ingress.extraPaths" -}}
            {{ end }}
        path: {{ .path | required "path is required for every ingress.extraPaths" | quote }}
        pathType: {{ .pathType | default "Prefix" | quote }}
      {{ end -}}
      - backend:
          service:
            name: {{ if (gt ($.Values.shardCount | int) 1) }}haproxy{{ else }}shard-0-{{ $.Values.web.name }}{{ end }}
            port:
              name: http
        path: /
        pathType: Prefix
  {{ end -}}
  {{ if $.Values.ingress.tls.enabled -}}
  tls:
  - hosts:
    {{ range $hosts -}}
    - {{ . | quote }}
    {{ end -}}
    secretName: {{ $.Values.ingress.tls.secretName | quote }}
  {{ end -}}
{{ end -}}
